# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  #push:
  #  branches: [ develop,master ]
  #pull_request:
  #  branches: [ develop ]
  #release:
  #  types:
  #    - created
  push:
    branches: [ master ]
    tags:
      - 'v*.*.*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: Ubuntu-20.04
    #needs: []


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.GIT_FULL_CONTROL_TOKEN}}
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install packages
      - name: Install Packages
        run: |
          echo ${{github.ref}}
          echo $GITHUB_HEAD_REF
          echo $GITHUB_SHA
          echo $GITHUB_REF
          echo $GITHUB_BASE_REF
          yarn install

      # build
      - name: Build
        run: |
          yarn release
      # upload server artifacts
      - name: Archive production server artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-static
          path: |
            ./dist/publish/server
          retention-days: 1
      # upload static artifacts
      #- name: Archive production static artifacts
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: dist-static
      #    path: |
      #      ./dist/publish/static
      #    retention-days: 1
      # push static file back to this repo
      #- name: Push production static back to this repo
      #  uses: stefanzweifel/git-auto-commit-action@v4
      #  with:
      #    commit_message:  "Publish Static ${{ needs.Gen_build_number.outputs.build_number }}"
      #    branch: static_resource
      #    commit_options: '--no-verify --signoff'
      #    file_pattern: dist/publish/static/*
      #    repository: .
      #    commit_user_name: "action publish static resource"
      #    commit_user_email: "action-static@github.org"
      #    commit_author: "action publish static resource"
      #    tagging_message: 'v.${{ needs.Gen_build_number.outputs.build_number }}'
      #    push_options: '--force'
      #    skip_dirty_check: true
      #    skip_fetch: true
      #- name: Tag
      #  #if: startsWith(github.ref, 'refs/heads/release/')
      #  run: |
      #    git tag "v.${{ needs.Gen_build_number.outputs.build_number }}"
      #    git push origin "v.${{ needs.Gen_build_number.outputs.build_number }}"
      #- name: Release
      #  uses: softprops/action-gh-release@v1
      #  if: startsWith(github.ref, 'refs/tags/')
      #  with:
      #    files: "dist/publish/static/**"
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GIT_FULL_CONTROL_TOKEN }}

      # push static resource to static git
      - name: Commit static resource files
        run: |
            cd ./dist/publish/
            git config --global user.email "zxb13194889618@outlook.com"
            git config --global user.name "SmileSB101"
            git clone ${{ secrets.CN_STATIC_SERVER }}
            mv ./static ./dome-react-static
            cd ./dome-react-static
            ls
            git add .
            git commit -m "Add v.${{ steps.buildnumber.outputs.build_number }} static changes"
      # git push
      - name: Push static resource to static git
        uses: ad-m/github-push-action@master
        with:
          repository: WinterSmileSB101/dome-react-static
          github_token: ${{ secrets.GIT_FULL_CONTROL_TOKEN }}
          branch: with-static-resource
          directory: ./dist/publish/dome-react-static


  # build images
  image:
    needs: [build]
    runs-on: Ubuntu-20.04
    steps:
      - name: build image
        run: |
          docker -v
          echo ${{ steps.buildnumber.outputs.build_number }}

